(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{444:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://github.com/Weldon0/vue-source-all",target:"_blank",rel:"noopener noreferrer"}},[t._v("github地址"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// el: '#app',")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ming'")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("$mout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("ol",[e("li",[e("p",[t._v("传入一个配置项options")])]),t._v(" "),e("li",[e("p",[t._v("调用this._init(options)")])]),t._v(" "),e("li",[e("p",[t._v("调用beforecreate生命周期钩子函数")])]),t._v(" "),e("li",[e("p",[t._v("通过initState(vm)初始化数据  data/methods/props/computed/watcher/provide/inject")]),t._v(" "),e("ol",[e("li",[t._v("如果vm上面有data属性 >> 调用initData(data)数据")]),t._v(" "),e("li",[t._v("判断当前data是否是函数 >> 如果是函数，执行函数获取数据，如果不是，直接拿data即可")]),t._v(" "),e("li",[t._v("调用proxy代理 >> data里面的数据挂载到vm实例上")]),t._v(" "),e("li",[t._v("observe(data)劫持数据\n"),e("ol",[e("li",[t._v("如果data不是对象/数组 或者是null  >> 直接return掉")]),t._v(" "),e("li",[t._v("判断"),e("code",[t._v("__ob__")]),t._v("属性 >> 判断当前数据是否被观测过，如果观测过，return")]),t._v(" "),e("li",[t._v("new Observer(data)\n"),e("ol",[e("li",[t._v("添加"),e("code",[t._v("__ob__")]),t._v("的标识")]),t._v(" "),e("li",[t._v("判断是否data是否是数组\n"),e("ol",[e("li",[t._v("是数组 >> 1、劫持数组原型方法  2、遍历数组，调用"),e("code",[t._v("observe(数组成员)")])]),t._v(" "),e("li",[t._v("是对象 >> 1、调用walk(data)方法 2、遍历对象，调用"),e("code",[t._v("defineReactive")]),t._v("进行"),e("code",[t._v("object.defineProperty")]),t._v("劫持")])])]),t._v(" "),e("li",[t._v("defineReactive方法内部\n"),e("ol",[e("li",[t._v("当前对象的值继续调用observe处理")]),t._v(" "),e("li",[t._v("声明const dep =new Dep()")]),t._v(" "),e("li",[t._v("get劫持\n"),e("ol",[e("li",[t._v("收集依赖(使用到当前数据的组件的更新watcher)")]),t._v(" "),e("li",[t._v("收集到的依赖，添加到dep里面的subs数组里面")])])]),t._v(" "),e("li",[t._v("set劫持\n"),e("ol",[e("li",[t._v("判断新旧的值是否一致，如果一致，直接return")]),t._v(" "),e("li",[t._v("Observe(newvalue)新的值进行响应式处理")]),t._v(" "),e("li",[t._v("赋值操作")]),t._v(" "),e("li",[t._v("Dep.notify() 通知dep里面的subs的watcher执行")])])])])])])])])])])]),t._v(" "),e("li",[e("p",[t._v("调用created生命周期钩子函数")])]),t._v(" "),e("li",[e("p",[t._v("编译模板")]),t._v(" "),e("ol",[e("li",[t._v("判断options是否传入el\n"),e("ol",[e("li",[t._v("如果有el，vue内部会自动调用$mount方法")]),t._v(" "),e("li",[t._v("如果没有el，需要new Vue的时候手动调用$mount")])])])])]),t._v(" "),e("li",[e("p",[t._v("$mount方法")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("判断用户是否传入render函数，如果render函数，什么事情都没有做")])]),t._v(" "),e("li",[e("p",[t._v("如果没有render函数，vue会把template编译成render函数,render函数的返回值就是当前组件的虚拟dom")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://wuxiaohui-1254415986.cos.ap-nanjing.myqcloud.com/uPic/image-20221007121045808.png",alt:"image-20221007121045808"}})])])])]),t._v(" "),e("li",[e("p",[t._v("调用mountComponet 进行组件挂载")]),t._v(" "),e("ol",[e("li",[t._v("调用"),e("code",[t._v("beforeMount")]),t._v("表示开始挂载组件")]),t._v(" "),e("li",[t._v("声明一个updateComponent方法 >> 调用组件更新的方法(render函数)，进行patch，新旧虚拟dom的对比，进行界面的更新")]),t._v(" "),e("li",[t._v("new Watcher(vm, updateComponent)\n"),e("ol",[e("li",[t._v("把当前组件的更新watcher添加到Dep.target身上（获取数据的时候能够收集到dep里面的subs里面）")]),t._v(" "),e("li",[t._v("调用getter方法 >> (updateComponet组件的更新方法)")]),t._v(" "),e("li",[t._v("编译模板 >> 获取数据 >> 触发当前数据get方法 >> 会把当前组件的更新watcher(Dep.target)添加到dep里面的subs里面")]),t._v(" "),e("li",[t._v("已经添加完毕之后，就可以Dep.target = null（删掉watcher）")]),t._v(" "),e("li",[t._v("调用"),e("code",[t._v("mounted")]),t._v("钩子")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("调用声明周期钩子的时候，都是使用的callHook函数")])])]),t._v(" "),e("li",[e("p",[t._v("调用更新watcher的时候，并不是同步调用")]),t._v(" "),e("ol",[e("li",[t._v("把当前的更新watcher通过nextTick放到异步队列里面进行异步的调用。")]),t._v(" "),e("li",[t._v("相同的wathcer同一批更新只会添加一次，所以vue中同一个方法内部进行多次的数据修改，页面只会更新一次。")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);